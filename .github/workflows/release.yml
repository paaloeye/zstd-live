name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target:
          - { os: ubuntu-latest, arch: x86_64-linux, name: linux-x86_64 }
          - { os: macos-latest, arch: x86_64-macos, name: macos-x86_64 }
          - { os: macos-latest, arch: aarch64-macos, name: macos-aarch64 }
          - { os: windows-latest, arch: x86_64-windows, name: windows-x86_64 }

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Zig
      uses: goto-bus-stop/setup-zig@v2
      with:
        version: '0.14.0'

    - name: Build for target
      run: |
        if [[ "${{ matrix.target.os }}" == "windows-latest" ]]; then
          zig build -Dtarget=${{ matrix.target.arch }} -Doptimize=ReleaseFast
          mv zig-out/bin/zstd-live.exe zstd-live-${{ matrix.target.name }}.exe
        else
          zig build -Dtarget=${{ matrix.target.arch }} -Doptimize=ReleaseFast
          mv zig-out/bin/zstd-live zstd-live-${{ matrix.target.name }}
        fi
      shell: bash

    - name: Create release archive
      run: |
        if [[ "${{ matrix.target.os }}" == "windows-latest" ]]; then
          7z a zstd-live-${{ matrix.target.name }}.zip zstd-live-${{ matrix.target.name }}.exe README.md LICENCE
        else
          tar -czf zstd-live-${{ matrix.target.name }}.tar.gz zstd-live-${{ matrix.target.name }} README.md LICENCE
        fi
      shell: bash

    - name: Upload release assets
      uses: actions/upload-artifact@v4
      with:
        name: zstd-live-${{ matrix.target.name }}
        path: |
          zstd-live-${{ matrix.target.name }}*

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: release

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          */zstd-live-*
        generate_release_notes: true
        draft: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
